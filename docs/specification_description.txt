Specification description
If the user signs up into smart commute, the program will create an authentication key and save the credentials into the database. in case the user attempts to log in, the program checks the credentials and allows or denies the user to enter its session. Once the user is logged into the app: the program receives as input a set of values defined by the user to create/update an event. These values will be defined inside an event object with the fields of title, end time, start time, description and location. The program then proceeds to verify that the event has a non-null title value, that the start time comes earlier than the end time, that there are no time overlapping between this event and other previously created events, and that by considering the travel times between the user's position and the other events (sequentially, in time), these are feasible considering the time gap between the user's current time and the rest of the events. If all these criteria are successful, then the event can be created (or updated if it had been created before and the user needs to modify values). The program should verify all these criteria in order to add/update events and afterwards render them onto the calendar interface.
Additionally, if the user accesses the roadmap, the program should take the user's current position as well as all the previously created events and geocode each event's key of location into a set of coordinate pairs. Once all events have their coordinates, the program should calculate (from the user's position) all the routes starting from the user's position to the rest of the upcoming events (ordered in time). Finally, it should render these events and routes onto a map interface, showing the routes the user needs to take (starting from his current position) to the rest of the events during the current day, and it should also show the routes between the other events for the following days. 
The route contains the travel instructions as well as its start and end points, and its duration, to be later rendered onto a popup which is shown to the user on the map interface.
The program defines user settings too. These settings are the preferred transport and available transport means. If the user enters the settings interface, the program will record the user configuration and save it into the database, as well as updating the settings graphical interface by showing the user predefined settings.
